name: 00.gke-deployment
on:
  workflow_call:
    inputs:
      DEPLOYMENT_NAME:
        required: true
        type: string
      IMAGE:
        required: true
        type: string
      INGRESS_IP:
        required: true
        type: string
      DOT_ENV_FILE_NAME:
        required: true
        type: string
env:
  DEPLOYMENT_NAME: ${{ inputs.DEPLOYMENT_NAME }}
  IMAGE: ${{ inputs.IMAGE }}
  INGRESS_IP: ${{ inputs.INGRESS_IP }}
  DOT_ENV_FILE_NAME: ${{ inputs.DOT_ENV_FILE_NAME }}
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Prepare dotenv
        run: rm -rf .env && mv $DOT_ENV_FILE_NAME .env
      - name: Install Yarn
        run: npm install yarn -g
      - name: Install Packages
        run: yarn
      - name: Build page
        run: yarn build
      - name: Grant execute permission for nginx
        run: chmod +x ./deploy/*
      - name: Create nginx folder
        run: mkdir ./nginx && mkdir ./nginx/conf.d
      - name: Generate default nginx configuration file setting
        run: ./deploy/nginx.default.conf.sh "$INGRESS_IP" > ./nginx/conf.d/default.conf
      - name: Generate nginx configuration file setting
        run: ./deploy/nginx.conf.sh > ./nginx/nginx.conf

      # Build the Docker image
      - name: Build
        run: |-
          docker build -t "$IMAGE" .
      - name: Login docker
        run: docker login -u lgold141@gmail.com -p thanhquang96   

      - name: Publish to Docker
        run: |-
          docker tag cab-client:latest warjamma/cab-client-2024:latest
          docker push warjamma/cab-client-2024:latest        
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
      - name: Deploy
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" --progress /home/runner/work/cab-client-2024/cab-client-2024/ $SERVER_USER@$SERVER_IP:$SERVER_DEST_PATH
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP 'sudo docker pull warjamma/cab-client-2024:latest' || exit 1
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP 'sudo docker run -d -p 80:80 --name cab-client warjamma/cab-client-2024:latest' || exit 1